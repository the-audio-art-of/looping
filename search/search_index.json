{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83c\udfe0 Home","text":"Welcome to The Art of Looping!  In this website I share my personal research about how samples were looped in the 80s and 90s, with accessible current tools!"},{"location":"#why","title":"Why?","text":"<p>I was very interested about old sample libraries and synthesizers, which made me research a lot about it. Also, I was very interested on developing sample libraries, so I had to learn about sample rate, fine tune, and of course, looping. During the next years, I tried to decipher the way big companies such as Roland, Yamaha, Korg and more, created loops, because I was impressed of how they get a really good result with little memory, and some of them I can't replicate even with the most precise and perfect crossfade I could make. I discover things during this research and practice them. Now I'm gonna share with you what I learned. Since today's world, memory is not a limit anymore and people forget about other looping techniques besides of crossfade.</p>"},{"location":"behaviors/","title":"Looping Behaviors","text":"<p>There are different ways to manipulate the behavior of looping, and I\u2019m going to list all of them:</p>"},{"location":"behaviors/#no-loop","title":"No loop","text":"<p>Also referred as \u201cone shot\u201d or \u201cdisabled\u201d. As it says, there\u2019s no looping. The sampler will straight play the sample until the sample ends. Some samplers has \"one shot\" and \"disabled\" as different options because \"one shot\" is for play the sample until it ends ignoring the amplitude envelope (it does not stop when the key is released) while \"disabled\" you can use the amplitude envelope and you can stop the sample when the key is released.</p> <p></p>"},{"location":"behaviors/#forward","title":"Forward","text":"<p>Also called loop_continuous in SFZ format, is where the sample has a determinate position for looping, start-loop and end-loop. When the sample go to the end loop, it starts again on start loop, and so on until the user stop playing the sample. When there\u2019s release in the envelope, the loop will still be going on.</p> <p></p>"},{"location":"behaviors/#sustain","title":"Sustain","text":"<p>Derivate of \u201cforward\u201d loop. The difference is when the release envelope is activated, the sample stops looping and plays the rest of the sample data beyond end-loop. This is used as a way to make \u201crelease\u201d samples with looping a short empty/silence area of the sample at the start.</p> <p></p>"},{"location":"behaviors/#bounce","title":"Bounce","text":"<p>Also known as \u201cping-pong\u201d, is when the sample go forward and then reverse and then forward all over again inside of start-loop and end-loop. The rarest looping behavior because was used for save memory and few samplers/romplers supports it. In this way you double the duration of the loop when in binary data is half of it and it\u2019s actually very hard to get a good loop without clicks in this way..</p> <p></p>"},{"location":"freeze/","title":"Looping Ways: Freeze looping","text":"<p>The frozen loop is a form of looping where the sample (for the sake of redundancy) \"freezes\" the frequencies in the loop area. What it does is to capture the frequencies to create a periodical waveform with it.</p> <p>For reference, this was done in early samplers, even in videogame consoles, like the Super Nintendo.</p> <p>This can be done with different techniques, which I\u2019m going to list them:</p>"},{"location":"freeze/#1-raw-loop","title":"1. Raw loop","text":"<p>This technique is about to set a start-loop and end-loop without any processing to a certain waveform section of the sample. This can be hit or miss, the quality of the loop will be variant depending of the sample rate of the sample. The less is the sample rate, the more difficult is to get a good freeze loop.</p> <p>A clear disadvantage for this technique is the loop sometimes will create harsh frequencies that can be annoying.</p> <p>Another disadvantage is depending of the loop section; it will create additional frequencies.</p>"},{"location":"freeze/#2-raw-loop-crossfade","title":"2. Raw loop + crossfade","text":"<p>It\u2019s very similar to the first one, with the difference of set a periodical section of 2 or 4 cycles, and applying a crossfade to blur the harsh frequencies. This also can be hit or miss, but in this way you have more probabilities to get a good freeze loop.</p> <p>The disadvantage of this is, again, sometimes it will create additional frequencies to the loop or the frequencies will be slightly different to the rest of the sample.</p> <p></p>"},{"location":"freeze/#3-celemony-melodyne","title":"3. Celemony Melodyne","text":"<p>This software was made as a pitch correction tool. But also works as a fast, easy and convenient way to create freeze loops to any sample! This is because when you import a sample to the program, and you click it to a certain section, it will play the whole sample until the point you clicked, and when it goes to the point, it generates a freeze loop. The exact thing we are looking for. And the results are good! Remember to record the take and set the algorithm as \"melodic\", then, with the sample editor, set the loop with a raw loop or combined with crossfade to the looped section generated by Melodyne. The good news is for this you need the essential version, so, no need to spend that much money for this function.</p> <p>I recommend to experiment with different points in the sample, to get the most appropriate loop for your needs.</p> <p>Now we know the different ways to do a freeze loop, but there\u2019s a small issue: the loop probably will be out of tune! This means the loop is detuned in comparison to the rest of the sample. Fortunately, this has a fix.</p>"},{"location":"freeze/#how-to-tune-a-frozen-looped-sample","title":"How to tune a frozen looped sample","text":"<p>This part is relative easy, first, you need a tune reference, in my case, is the FL Studio\u2019s oscilloscope, where the wave gets static when is played in C, meaning the wave is in tune. Otherwise, the wave will move to left or right. Now, with the reference, I try to tune the loop of the sample, and we get the value for it, for example, +23 cents. Then, with that value, we go to the sample editor, and we are going to select the whole sample except the loop zone, and in this section of the sample, we are going to resample it to a certain fine pitch, which is going to be the opposite value of the loop tune value, in this example, -23 cents. Apply the changes, and now, the whole sample will be in tune when we tune it to +23 cents. Some cases this does not work, so, with trial and error, instead of using the exact opposite value, we will try to do an approximation, in this example, -29 cents, -32 cents\u2026 until we got the right value for it.</p> <p>And that\u2019s how you tune a sample with a frozen loop! Here a video demonstration of it:</p> <p>And this is how you make a freeze looping.</p>"},{"location":"infinity/","title":"ANTARES INFINITY: The (Almost) Lost Looping Tool","text":"<p>One day I extracted the samples of gm.dls (the default GM bank for Windows), and one of the samples got me my attention and it\u2019s this Sawtooth sample:</p> <p></p> <p>Looks weird, right? It starts as a normal sawtooth and then suddenly it\u2019s a weird smooth shape. This loop also has some static frequencies like the lower ones while the high frequencies are in constant movement if you see it in a spectrum.</p> <p>My mind was like \u201chow they do this? This is not possible with a simple crossfade\u201d, and I notice other companies (Yamaha, Korg, to name a few) and sample library manufactures had the same behavior with some samples, so I started to make a research about the looping tools used by that time, which was around the 90s.</p> <p>I remember Spectrasonics (founded by one of the most important people in Roland, Eric Persing) mentioned about a tool called \u201cInfinity\u201d in one of their libraries, which was Heart of Africa 1.</p> <p></p> <p>I google it and I ended up with a review from an old magazine, but with an antique version for Macintosh, I thought was a very old tool and hard to emulate, until I check a thread in a forum called Mac OS 9 Lives, and this is where I got the tool. http://macos9lives.com/smforum/index.php?topic=1635.0</p> <p>I realize I need a Mac OS 9 machine, I tried with Sheepshaver but I couldn\u2019t run it, so I had to use QEMU which fortunately, It worked. With trial and error I get it running, and finally, I found the exact tool used by these corporations! And you can use it with your own samples.</p>"},{"location":"infinity/#how-to-run","title":"How to run","text":""},{"location":"infinity/#1-a-build-of-the-qemu-fork-with-audio-support","title":"1. A build of the QEMU fork with audio support:","text":"<p>https://gist.github.com/akemin-dayo/0e9bdcd74b2ad7f0bcf56e0680256103</p> <p>The build I used for Windows is this one:</p> <p>https://surfdrive.surf.nl/files/index.php/s/SS5gKHZrf1ykFuS/download</p> <p>and for macOS users:</p> <p>https://surfdrive.surf.nl/files/index.php/s/00rRe6m1a3K44BK/download</p>"},{"location":"infinity/#2-mac-os-921-hard-disk-image-with-antares-infinity","title":"2. Mac OS 9.2.1 hard disk image with Antares Infinity","text":"<p>This is provided by myself (2GB .img Download), inside of this hard disk includes a READ ME with instructions and indications. The way to configure it is with a bash/batch file, since QEMU is executed via command lines.</p> <p>For Windows, you can create a bat file like this:</p> <p></p> <p>samples.iso are the AIFF sample files you are going to import from your computer to Mac OS 9 stored as a ISO file. You can delete that line if you want to run only the hard disk.</p> <p>For Bash (macOS/Linux):</p> <p></p> <p>Replace .exe with whatever executable you're using for your OS.</p> <p>This batch/bash file must be in the same folder as the executable.</p>"},{"location":"infinity/#3-aiff-files-with-sample-loop-and-sample-root-key-information","title":"3. AIFF files with sample loop and sample root key information","text":"<p>This can be done with Awave Studio if you want to convert it from WAV to AIFF. I didn't found free alternatives for this task unfortunately (only converts from WAV to AIFF without loop/root key information).</p>"},{"location":"infinity/#4-folder-to-iso-converter","title":"4. Folder to ISO converter","text":"<p>There\u2019s several ways to do this, use the one you find more comfortable. With this you create a ISO file which includes the AIFF samples you want to import to Mac OS 9.</p>"},{"location":"infinity/#5-hfsexplorer","title":"5. HFSExplorer","text":"<p>https://www.catacombae.org/hfsexplorer/</p> <p>This is for exploring the Mac OS 9 hard disk and extract your AIFF samples made with Infinity to use them in a modern DAW or sampler.</p>"},{"location":"infinity/#now-you-try","title":"Now you try!","text":"<p>I recommend to read the manual since it explains everything very well. But soon I will make articles making my own explanations and examples using the tools provided by Infinity.</p> <p>MANUAL: https://web.archive.org/web/20060108175322/http://www352.pair.com/anttech/downloads/Infinity_v3.18_manual.pdf</p> <p>Hope you enjoy this tool, see you later!</p> <p></p>"},{"location":"pingpong/","title":"Looping Ways: Ping Pong","text":"<p>Finally I figured out one kind of looping technique that seemed almost imposible to make, the ping-pong loop.</p> <p>This way of looping is useful for non-periodic samples that you could ruin them if you use other ways (like crossfade) and also, if you want a smaller size of the sample while it last more longer (in case if your sampler supports this looping behaviour).</p> <p>Examples I saw using this way of looping are strings, distorted electric guitars, brass section and etherial sounds.</p> <p>This is used mostly by Roland since the Roland S-550 days, and unfortunately, there\u2019s no automatic tool that let you do this kind of procesing to your samples. So, you have to do it manually.</p> <p>You can use any audio editor or DAW for this, find the one that you feel more confortable to do this task. I\u2019m going to use Audacity. Before of anything, you have to make sure you have enabled some sort of snap feature, in my Audacity is enabled with a bar of 1/128. This is for to have a good time proportion between crossfades.</p> <p>Now, you need a sample, my case is this distorted guitar sample.</p> <p>Select the section you want to loop and split it, you will have your attack sample and the loop sample.</p> <p>Next, insert a new channel and copy this loop, reverse it and then crossfade it with the original loop (this crossfade should have a curve, in Audacity, is Effect -&gt; Steve Daulton -&gt; Crossfade Tracks, then Fade Type: Constant Power 1 and Custom Curve: 1.0).</p> <p>After that, copy the original loop at the end of the reversed loop and crossfade it again. And last, split this last section between the reversed and normal loop and copy it to the attack sample, and apply a crossfade between the attack of the sample and the normal loop.</p> <p></p> <p>Why we have to do this crossfade at the attack of the sample? Because if you don\u2019t do this, your loop is going to start very late in the sample, and we don\u2019t want that if we want to save memory (the loop should start close to the start of the sample itself).</p> <p>Play your sample and it should sound good. Export it as WAV and you\u2019re ready for the next stage!</p> <p>In your sample editor, search for the mirrored waveforms, you will find one at the start of the sample and another at the end of the sample. Here is where you have to set the start-loop and end-loop. It must be right in the middle as possible, like a mirrored image (if the sample points are odd, even better).</p> <p></p> <p>If you play this, normally it will play as a foward loop. So, go to your options or sampler loop options and set it to ping-pong or bounce. Now you are listening to it as intended. And if you see your sampler, the line where plays the sample through the waveform, it does the ping-pong move!</p> <p>But what if your sampler doesn\u2019t support it? If you don\u2019t care about size, you can copy the loop zone, paste it next to the original loop, reverse it. Now this ping-pong loop works with foward looping!</p> <p></p> <p>The results; first the original sample, then the ping-pong looped one:</p> <p>And this is how you do a proper ping-pong loop with samples, now it\u2019s your turn!</p>"},{"location":"raw/","title":"Looping Ways: Raw looping","text":"<p>Raw looping is a way of loop where you just set a loop-start and a loop-end without any audio processing.</p> <p>This type of loop works pretty well with periodical samples (samples that has a certain repetitive and consistent waveform on them) which makes easier to use this kind of looping. These could be simple synth waveforms, non-vibrato solo brass, woodwinds and strings (violin/cello/viola/contrabass), and so on.</p> <p></p> <p>The start-loop and end-loop should have the same or similar sample point to make it work, otherwise, it will click. For this, you have to choose which point of the waveform pattern that you will set for start-loop, and based on that, you search for the end-loop having the same or similar characteristics.</p> <p></p> <p>Depending of the section, the loop will not be noticeable. Because if you loop a section of the sample (for example, a woodwind), where the player blows inconsistently, you will notice the loop even if there\u2019s no clicks on it.</p> <p>And this is how you make a raw looping!</p>"},{"location":"resample/","title":"How to save/free up space with samples using sample rate","text":"<p>If you are a music producer, \u201csamplist\u201d or a nerd/geek of music gear/technology, probably you know about sample rate. I\u2019m going to assume you already know what it is, and if you want to know it, here a good explanation about it: https://www.izotope.com/en/learn/digital-audio-basics-sample-rate-and-bit-depth.html</p> <p>For most people, they believe sample rate only are the standard ones, like 22050, 32000, 44100, 48000\u2026</p> <p>I\u2019m not going into details because is not necessary in this case, but you should know that these standards are actually specifically designed for certain mediums and circumstances. One of them is for recording and processing like audio engineers who does mixing to reduce distortion, that\u2019s why they use 88200 or 96000Hz. For CD format is 44100 because it\u2019s proportional to 25FPS (PAL) and 30FPS (NTSC). Similar thing with 48000 for DVDs, digital TV and so on.</p> <p>As you can see, these sample rates are like this because of the medium. But what about samplers or synths? Well, in this case they don\u2019t need a standard sample rate for the samples. Yes, they do have a standard sample rate output just like anything that has a DAC, but for the sample playback doesn\u2019t matter.</p> <p>Originally, the way samplers pitch the samples to certain notes, is with changing the sample rate playback of the sample based on their original sample rate. For example, if the sample rate of the note C4 is 44100, and I want a 1+ semitone up, what the sampler does is change that 44100 sample rate to 46722 with a math formula</p> <p>[new-sample-rate = Math.Pow(2.0, (semitones / 12.0 )) * original-samplerate]</p> <p>and now it sounds like C#4. This is how old samplers like Fairlight CMI works. For modern samplers, it uses a similar approach with added interpolation.</p> <p>This is the reason why the sample rate doesn\u2019t matter for sample playback, it will always work with non-standard sample rates, and this is good because we can reduce the size of our samples with resampling.</p> <p>When the lower is the sample rate, the lower is the range of high frequencies can take. And for samples where there\u2019s no important high frequencies, you\u2019re wasting sample rate with it. For example, this happens with instruments in low notes, such as Piano or Bass:</p> <p></p> <p></p> <p>You have to do resampling to cut these frequencies. To make an accurate resampling, you have to use the formula:</p> <p>[sample-rate = 2 * maximum-frequency]</p> <p>In maximum frequency you write the maximum frequency you need for the sample, it can be 4015 or 13230. You can check this in your DAW with any plugin that has a spectrum analyzer. Press Calculate and you will get the exact sample rate that will cut to that certain frequency you specified.</p> <p></p> <p>Write that sample rate into your resampler and Voil\u00e0! You optimized a sample. If you resample the sample, you realize that now the sample is lightweight because it stores less sample points in the file for the same sound. This depends of how much frequencies you\u2019re going to cut.</p> <p></p> <p>NOTE: Do this resampling BEFORE of making a loop, because you will ruin your loop if you resample it after looping.</p> <p>This technique was used by E-MU Systems for the Proteus line and their sequels. They used a lot of custom sample rates for the samples to optimize the used space in memory.</p> <p>Now it\u2019s your turn! Try to optimize your samples with this technique in your tiny memory samplers.</p> <p>The resampling software I recommend and it's free is Audacity. Go to Edit -&gt; Preferences -&gt; Quality -&gt; Sample Rate Converter -&gt; Select \"Best Quality (Slowest)\" and now you have a high quality resampling for your samples!</p> <p>Another free alternative is SoX Resampler (soxr) included on ffmpeg.</p> <p>See ya!</p>"},{"location":"rotatesums/","title":"Looping Ways: Rotate Sums looping","text":"<p>This is another loop tool from Antares Infinity (click here if you don't have it), and it\u2019s interesting because it could be a good alternative to crossfade.</p> <p>What it is this \u201cRotate Sums\u201d thing? Basically it\u2019s distributing random irregularities throughout the loop. This type of loop works for non-periodic samples (strings, chorus, synths stacks, noise, etc).</p> <p>And what\u2019s the advantage of this looping way? Unlike crossfade, this one doesn\u2019t change the size of the loop start-end. This means we can preserve the duration of the loop, instead of making it shorter like the crossfade. So, this is useful when we have limited memory and the size of the samples matters.</p> <p>Here a little demo of it: first, it\u2019s the sample with a raw loop, second, the sample using crossfade, and finally, the sample using rotate sums.</p> <p>Now I\u2019m going to explain the controls of this tool.</p> <p></p> <p>BEFORE of using this, we have to make sure our sample does not have clicks in the loop. A simple fix of this could be to add a little crossfade just to make it disappear. After that, we can use the tool, and it\u2019s very simple: we only have a rotation count. We have to experiment the different values until we get a coherent result for our sample, so, pay attention of how the loops sounds.</p> <p>And then we have the \u201cMerge Attack and Loop Segments\u201d controls which are just how we fade the start of the original sample with the generated loop to have a coherent transition between the two.</p> <p></p> <p>And this is how to use Rotate Sums Looper, now it\u2019s your turn, and experiment this tool with your samples!</p>"},{"location":"synthesis/","title":"Looping Ways: Synthesis looping","text":"<p>This is one of the most interesting looping tool out there, because this solves a big issue with crossfade looping: not all frequencies are consistent.</p> <p>When you do a crossfade loop, the frequencies may vary, you can spot a harmonic in common during the crossfade but only that harmonic in specific, the rest of harmonics of the sample won\u2019t be consistent and will bounce the gain of each. And it\u2019s painful to spot the exact frequency we want.</p> <p>To illustrate this, I have this piano sample, piano samples are a pain when it comes to loop them. First is the original without loop, second is the same piano but looped with crossfade and third is the same piano but looped with synthesis looper (with the right configuration of course).</p> <p>As you can see and hear, for synthesis looper, the gain inconsistencies are gone, and makes the sample very pleasant to use in any pitch.</p> <p>Then, how I use this synthesis looper?</p> <p>Go to Antares Infinity: click here if you don't have it. When you select synthesis looper, this window is open. You have a lot of controls but the most important ones are these:</p> <p></p> <p>We have 2 zones, the first and second one. The first one can be specify where it ends the zone (the exact frequency) and the second one where it starts the zone. We can\u2019t specify the frequency value for the second one unfortunately, so we have to guide us based on the GUI.</p> <p>Each one has their own Sidelobe Width (% x 10) which graphically it\u2019s represented as the height. What it does this \u201c% x 10\u201d thing? Basically, it\u2019s how much \u201cstatic/periodic\u201d or \u201cdiverse/non-periodic\u201d is the sound of the zone. When the height is high, you will get a \u201cchorused\u201d sound from it. If the height is low or zero, then you will get a \u201cfreeze\u201d sound from it. Of course, both based on the frequencies you are covering.</p> <p>And then we have the fade size between the zones, for better blur of each different sounds of the zones.</p> <p>Retain Noise % means of how much floor noise we want in the loop to match the floor noise from the original sample, this is for make the loop sound natural and coherent with the start of the original sample (the attack).</p> <p>Illustrated in a modern visualization, it\u2019s like this:</p> <p></p> <p>Remember to assign a MIDI NOTE value to the sample, this can be perfectly taken from the sample metadata if you already did it when you saved the sample or you can assign it at [Edit -&gt; Set MIDI Note] if you forgot to do it (as reference, the middle C it\u2019s C3 in this program).</p> <p>This is important because this helps to indicate which frequency note is the fundamental, the base one. For example, if the sample it is C4, midi note 60, then the fundamental frequency is 261.6256Hz and the rest of generated frequencies will be coherent with the timbre of the sample.</p> <p>And last we have the \u201cMerge Attack and Loop Segments\u201d controls which are just how we fade the start of the original sample with the generated loop to have a coherent transition between the two.</p> <p></p> <p>With this you can have a very organic loop with little memory, of course, it won\u2019t sound 100% natural as the original but it\u2019s the best choice for instruments with a lot of inconsistency and variations that makes very difficult to get a good result using other looping ways, like pianos.</p> <p>Now you try! Dominate the tool and make \u201cmagic\u201d with that like Roland!</p>"}]}